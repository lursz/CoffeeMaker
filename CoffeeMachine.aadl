package CoffeeMachine
public
	with DataTypes; -- np. Base_Types::Integer
	with Hardware;
	with Devices;

-- THREADS
	thread UserInterface
		features
			beverageParams: out data port DataTypes::BeverageParameters;
			displayOutput: out data port;
		properties
			Dispatch_Protocol => Periodic;
			Period => 100ms; -- Update display every 100 milliseconds
	end UserInterface;

	thread BrewingControl
		features
			beverageParamsInput: in data port DataTypes::BeverageParameters;
			beverageParamsOutput: out data port DataTypes::BeverageParameters;
			checkDone: in event port;
			startBrewing: out data port DataTypes::BeverageParameters;
			stopBrewing: in event port;
		properties
			Dispatch_Protocol => Sporadic;
			Priority => 1;
	end BrewingControl;
	
	thread deviceWaterControl
		features 
			WaterInput: in data port DataTypes::BeverageParameters;
			waterOutput: out data port DataTypes::BeverageParameters;
	end deviceWaterControl;

	thread deviceCoffeeControl
		features 
			CoffeeInput: in data port DataTypes::BeverageParameters;
			CoffeeOutput: out data port DataTypes::BeverageParameters;
	end deviceCoffeeControl;

	thread deviceTemperatureControl
		features 
			TemperatureInput: in data port DataTypes::BeverageParameters;
			TemperatureOutput: out data port DataTypes::BeverageParameters;
	end deviceTemperatureControl;

	thread deviceMilkControl
		features 
			MilkInput: in data port DataTypes::BeverageParameters;
			MilkOutput: out event port;
	end deviceMilkControl;
	
	thread deviceMilkFrotherControl
		features
			FrotherInput: in event port;
			FrotherOutput: out event port;
	end deviceMilkFrotherControl;
	
	thread SensorMonitoring
		features
			OutSensor: out data port; -- Sensor outputs data to this port
			InSensor: in event port;
	end SensorMonitoring;


	
-- Process
	process MainProcess
	end MainProcess;

	process implementation MainProcess.Impl
		subcomponents
			uiThread: thread UserInterface;
	end MainProcess.Impl;


	process CoffeeBrewing_Process
		features
			inBrewing: in data port DataTypes::BeverageParameters;
			outCoffee: out data port DataTypes::BeverageParameters;
			outWater: out data port DataTypes::BeverageParameters;
			outTemp: out data port DataTypes::BeverageParameters;
			outMilk: out data port DataTypes::BeverageParameters;
			outFrother: out data port DataTypes::BeverageParameters;
	end CoffeeBrewing_Process;

	process implementation CoffeeBrewing_Process.Impl
		subcomponents
			brewingThread: thread BrewingControl;
			tempCtrl: thread deviceTemperatureControl;
			coffeeCtrl: thread deviceCoffeeControl;
			waterCtrl: thread deviceWaterControl;
			milkCtrl: thread deviceMilkControl;
			frotherCtrl: thread deviceMilkFrotherControl;
		connections
			-- Connections 
			coffee: port brewingThread.beverageParamsOutput -> coffeeCtrl.CoffeeInput;
			waterHeater: port coffeeCtrl.CoffeeOutput -> tempCtrl.TemperatureInput;
			water: port tempCtrl.TemperatureOutput -> waterCtrl.WaterInput;
			milkHeater: port waterCtrl.waterOutput -> tempCtrl.TemperatureInput;
			milk: port tempCtrl.TemperatureOutput -> milkCtrl.MilkInput;
			frother: port milkCtrl.MilkOutput -> frotherCtrl.FrotherInput;
			checkDone: port frotherCtrl.FrotherOutput -> brewingThread.checkDone;		

	end CoffeeBrewing_Process.Impl;
	
	process SensorMonitoringProcess
		features
			OutSensor: out data port;
			InSensor: in event port;
	end SensorMonitoringProcess;

	process implementation SensorMonitoringProcess.Impl
		subcomponents
			sensorThread: thread SensorMonitoring;
	end SensorMonitoringProcess.Impl;



-- SYSTEMS --
	system CoffeeMachine_System
	end CoffeeMachine_System;

	system implementation CoffeeMachine_System.Impl
		subcomponents
			CPU: processor Hardware::GenericProcessor;
			magBus: bus Hardware::MagBus;
			RAM: memory Hardware::GenericMemory;
			devicesSystem: system CoffeeDevices_System;
			sensorsSystem: system Sensors_System;
			screen: device Devices::Screen_Device.Impl;
		connections
			c1: bus access cpu.magBus -> magBus;


	end CoffeeMachine_System.Impl;

	system Sensors_System
	end Sensors_System;
	
	system implementation Sensors_System.Impl
		subcomponents
			magBus: bus Hardware::MagBus;
			cpu: processor Hardware::GenericProcessor;
			sensorsProcess: process SensorMonitoringProcess;
			coffeeSensor: device Devices::Sensor_Device.Impl;
			waterSensor: device Devices::Sensor_Device.Impl;
			milkSensor: device Devices::Sensor_Device.Impl;
			tempSensor: device Devices::Sensor_Device.Impl;
			frotherSensor: device Devices::Sensor_Device.Impl;
		connections
			-- Connections
			sensor2Coffee: port coffeeSensor.sensor -> sensorsProcess.InSensor;
			sensor2Water: port waterSensor.sensor -> sensorsProcess.InSensor;
			sensor2Milk: port milkSensor.sensor -> sensorsProcess.InSensor;
			sensor2Temp: port tempSensor.sensor -> sensorsProcess.InSensor;
			sensor2Frother: port frotherSensor.sensor -> sensorsProcess.InSensor;
			magBusAccess1: bus access coffeeSensor.MB -> magBus;
			magBusAccess2: bus access waterSensor.MB -> magBus;
			magBusAccess3: bus access milkSensor.MB -> magBus;
			magBusAccess4: bus access tempSensor.MB -> magBus;
			magBusAccess5: bus access frotherSensor.MB -> magBus;
			CPU2Mag: bus access magbus -> CPU.magBus;
	end Sensors_System.Impl;
	
	system CoffeeDevices_System
	end CoffeeDevices_System;

	system implementation CoffeeDevices_System.Impl
		subcomponents
			magBus: bus Hardware::MagBus;
			cpu: processor Hardware::GenericProcessor;
			coffeeBrewingProcess: process CoffeeBrewing_Process.Impl;
			grinder: device Devices::Grinder_Device.Impl;
			waterPump: device Devices::Pump_Device.Impl;
			waterHeater: device Devices::Heater_Device.Impl;
			milkPump: device Devices::Pump_Device.Impl;
			milkFrother: device Devices::Frother_Device.Impl;
		connections
			process2Coffee: port coffeeBrewingProcess.outCoffee -> grinder.coffee;
            process2Water: port coffeeBrewingProcess.outWater -> waterPump.water;
            process2Temp: port coffeeBrewingProcess.outTemp -> waterHeater.temp;
            process2Milk: port coffeeBrewingProcess.outMilk -> milkPump.milk;
            process2Frother: port coffeeBrewingProcess.outFrother -> milkFrother.temp;
            checkDoneCoffee: bus access grinder.checkDone -> magBus;
			checkDoneWater: bus access waterPump.checkDone -> magBus;
			checkDoneTemp: bus access waterHeater.checkDone -> magBus;
			checkDoneMilk: bus access milkPump.checkDone -> magBus;
			checkDoneFrother: bus access milkFrother.checkDone -> magBus;
			CPU2Mag: bus access magBus -> cpu.magBus;					
	end CoffeeDevices_System.Impl;


----------
end CoffeeMachine;
