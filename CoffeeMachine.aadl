package CoffeeMachine
public
	with DataTypes; -- np. Base_Types::Integer
	with Hardware;
	with Devices;

-- SYSTEMS --
	system CoffeeMachine_System
	end CoffeeMachine_System;

	system implementation CoffeeMachine_System.Impl
		subcomponents
			cpu1: processor Hardware::GenericProcessor;
			magBus: bus Hardware::MagBus;
			screen: device Devices::Screen_Device.Impl;
			dvices: system CoffeeDevices_System;
			sensors: system Sensors_System;
		connections
			c1: bus access cpu1.magBus -> magBus;
	end CoffeeMachine_System.Impl;

	system Sensors_System
	end Sensors_System;
	
	system implementation Sensors_System.Impl
		subcomponents
			sensorsProcess: process SensorMonitoringProcess;
			coffeeSensor: device Devices::Sensor_Device.Impl;
			waterSensor: device Devices::Sensor_Device.Impl;
			milkSensor: device Devices::Sensor_Device.Impl;
	end Sensors_System.Impl;
	
	system CoffeeDevices_System
	end CoffeeDevices_System;

	system implementation CoffeeDevices_System.Impl
		subcomponents
			coffeeBrewingProcess: process CoffeeBrewing_Process.Impl;
			grinder: device Devices::Grinder_Device.Impl;
			waterPump: device Devices::Pump_Device.Impl;
			waterHeater: device Devices::Heater_Device.Impl;
			milkPump: device Devices::Pump_Device.Impl;
			milkFrother: device Devices::Frother_Device.Impl;
	end CoffeeDevices_System.Impl;

	
-- Process
	process MainProcess
	end MainProcess;

	process implementation MainProcess.Impl
		subcomponents
			uiThread: thread UserInterface;
			monitorProcess: process SensorMonitoringProcess.Impl;
			brewingProcess: process CoffeeBrewing_Process.Impl;
			screen: device Devices::Screen_Device;
		connections
			-- Connections within MainProcess
			t1: port uiThread.beverageParams -> brewingProcess.brewingThread.beverageParams;
			t2: port uiThread.displayOutput -> screen.displayOutput;
	end MainProcess.Impl;


	process CoffeeBrewing_Process
	end CoffeeBrewing_Process;

	process implementation CoffeeBrewing_Process.Impl
		subcomponents
			monitorProcess: process SensorMonitoringProcess.Impl;
			brewingThread: thread BrewingControl;
			grinder: device Devices::Grinder_Device;
			waterPump: device Devices::Pump_Device;
			waterHeater: device Devices::Heater_Device;
			milkPump: device Devices::Pump_Device;
			milkFrother: device Devices::Frother_Device;

		connections
			-- Connections within MainProcess
			t2: port brewingThread.pumpParams -> waterPump.time;
			t3: port brewingThread.heatParams -> waterHeater.temp;
			t4: port brewingThread.pumpParams -> milkPump.time;
			t5: port brewingThread.heatParams -> milkFrother.temp;
			

	end CoffeeBrewing_Process.Impl;
	
	process SensorMonitoringProcess
	end SensorMonitoringProcess;

	process implementation SensorMonitoringProcess.Impl
		subcomponents
			brewingProcess: process CoffeeBrewing_Process.Impl;
			sensorThread: thread SensorMonitoring;
			coffeeSensor: device Devices::Sensor_Device;
			waterSensor: device Devices::Sensor_Device;
			milkSensor: device Devices::Sensor_Device;
		connections
			-- Connections within SensorMonitoringProcess
			p0: port brewingProcess.brewingThread.startBrewing -> sensorThread.InSensor;	
			p1: port coffeeSensor.sensorOutput -> sensorThread.InSensor;
			p2: port waterSensor.sensorOutput -> sensorThread.InSensor;
			p3: port milkSensor.sensorOutput -> sensorThread.InSensor;
			p4: port sensorThread.OutSensor -> brewingProcess.brewingThread.stopBrewing;
	end SensorMonitoringProcess.Impl;


	

-- THREADS
	thread UserInterface
		features
			beverageParams: out data port DataTypes::BeverageParameters;
			displayOutput: out data port;
		properties
			Dispatch_Protocol => Periodic;
			Period => 100ms; -- Update display every 100 milliseconds
	end UserInterface;

	thread BrewingControl
		features
			beverageParams: in data port DataTypes::BeverageParameters;
			pumpParams: out data port DataTypes::Time;
			heatParams: out data port DataTypes::Temperature;
			grinderParams: out data port DataTypes::Time;
			startBrewing: out event port;
			stopBrewing: in event port;
		properties
			Dispatch_Protocol => Sporadic;
			Priority => 1;
	end BrewingControl;

	thread SensorMonitoring
		features
			OutSensor: out data port; -- Sensor outputs data to this port
			InSensor: in event port;
	end SensorMonitoring;


----------
end CoffeeMachine;
